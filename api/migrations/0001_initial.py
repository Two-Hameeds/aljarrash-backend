# Generated by Django 5.0.3 on 2024-07-22 00:09

import api.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "phone",
                    models.CharField(max_length=13, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(blank=True, max_length=30, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=13, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="LandSurveyProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("global_id", models.IntegerField(blank=True, null=True)),
                (
                    "stage",
                    models.CharField(
                        choices=[
                            ("land_survey", "Land Survey"),
                            ("land_report", "Land Report"),
                            ("completed_projects", "Completed Projects"),
                            ("informal_transactions", "Informal Transactions"),
                        ],
                        max_length=100,
                    ),
                ),
                ("project_name", models.CharField(max_length=100)),
                (
                    "location_visit",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Working on it", "Working On It"),
                            ("Done", "Done"),
                            ("Hold", "Hold"),
                            ("Not required", "Not Required"),
                            ("ready", "Ready"),
                            ("no", "No"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("location_visit_date", models.DateField(blank=True, null=True)),
                ("protocol_number", models.IntegerField(blank=True, null=True)),
                (
                    "transaction_review",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "protocol_purpose",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "payment_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Working on it", "Working On It"),
                            ("Done", "Done"),
                            ("Hold", "Hold"),
                            ("Not required", "Not Required"),
                            ("ready", "Ready"),
                            ("no", "No"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "survey_report_issuance",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "client_phone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="land_survey_projects",
                        to="api.client",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("global_id", models.IntegerField(blank=True, null=True)),
                ("project_name", models.CharField(max_length=100)),
                (
                    "project_type",
                    models.CharField(
                        choices=[
                            ("destruction", "Destruction"),
                            ("restoration", "Restoration"),
                            ("add_floors", "Addfloors"),
                            ("addition", "Addition"),
                            ("new", "New"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "use_type",
                    models.CharField(
                        choices=[
                            ("entertaining", "Entertaining"),
                            ("agricultural", "Agricultural"),
                            ("residential_commercial", "Residentialcommercial"),
                            ("commercial", "Commercial"),
                            ("residential", "Residential"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "current_stage",
                    models.CharField(
                        choices=[
                            ("sketch", "Sketch"),
                            ("sketch_review", "Sketch Review"),
                            ("approval_before_columns", "Approval Before Columns"),
                            ("awaiting_client_approval", "Awaiting Client Approval"),
                            ("execution_stage", "Execution Stage"),
                            ("autocad_review", "Autocad Review"),
                            ("ready_to_print", "Ready To Print"),
                            ("validate_sign_review_copy", "Validate Sign Review Copy"),
                            ("ready_to_collect", "Ready To Collect"),
                            ("client_received_copy", "Client Received Copy"),
                            ("edit_client_notes", "Edit Client Notes"),
                            ("license_issuance", "License Issuance"),
                            ("ready_for_final_receipt", "Ready For Final Receipt"),
                            ("completed_projects", "Completed Projects"),
                            ("inactive_projects", "Inactive Projects"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "previous_stage",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("sketch", "Sketch"),
                            ("sketch_review", "Sketch Review"),
                            ("approval_before_columns", "Approval Before Columns"),
                            ("awaiting_client_approval", "Awaiting Client Approval"),
                            ("execution_stage", "Execution Stage"),
                            ("autocad_review", "Autocad Review"),
                            ("ready_to_print", "Ready To Print"),
                            ("validate_sign_review_copy", "Validate Sign Review Copy"),
                            ("ready_to_collect", "Ready To Collect"),
                            ("client_received_copy", "Client Received Copy"),
                            ("edit_client_notes", "Edit Client Notes"),
                            ("license_issuance", "License Issuance"),
                            ("ready_for_final_receipt", "Ready For Final Receipt"),
                            ("completed_projects", "Completed Projects"),
                            ("inactive_projects", "Inactive Projects"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("s_history", models.JSONField(blank=True, null=True)),
                ("required_attachments", models.JSONField(blank=True, null=True)),
                ("contract_sign_date", models.DateField(blank=True, null=True)),
                (
                    "land_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "plan_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("land_area", models.FloatField(blank=True, null=True)),
                (
                    "project_location",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("floors_number", models.IntegerField(blank=True, null=True)),
                ("facades_number", models.IntegerField(blank=True, null=True)),
                ("project_receipt_date", models.DateField(blank=True, null=True)),
                ("sketch_approval_date", models.DateField(blank=True, null=True)),
                ("columns_approval_date", models.DateField(blank=True, null=True)),
                ("obstacles", models.CharField(blank=True, max_length=100, null=True)),
                ("s_project_value", models.FloatField(blank=True, null=True)),
                ("s_payments", models.JSONField(blank=True, null=True)),
                ("s_modification_price", models.FloatField(blank=True, null=True)),
                (
                    "architecture_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Working on it", "Working On It"),
                            ("Done", "Done"),
                            ("Hold", "Hold"),
                            ("Not required", "Not Required"),
                            ("ready", "Ready"),
                            ("no", "No"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("architect_start_date", models.DateField(blank=True, null=True)),
                ("architect_end_date", models.DateField(blank=True, null=True)),
                (
                    "architect_stop_reason",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "construction_status",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("construction_start_date", models.DateField(blank=True, null=True)),
                ("construction_end_date", models.DateField(blank=True, null=True)),
                (
                    "construction_stop_reason",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "plumbing_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Working on it", "Working On It"),
                            ("Done", "Done"),
                            ("Hold", "Hold"),
                            ("Not required", "Not Required"),
                            ("ready", "Ready"),
                            ("no", "No"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("plumbing_start_date", models.DateField(blank=True, null=True)),
                ("plumbing_end_date", models.DateField(blank=True, null=True)),
                (
                    "plumbing_stop_reason",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "electrical_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Working on it", "Working On It"),
                            ("Done", "Done"),
                            ("Hold", "Hold"),
                            ("Not required", "Not Required"),
                            ("ready", "Ready"),
                            ("no", "No"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("electrical_start_date", models.DateField(blank=True, null=True)),
                ("electrical_end_date", models.DateField(blank=True, null=True)),
                (
                    "electrical_stop_reason",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "architecture_review",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "construction_review",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "plumbing_review",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "electrical_review",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "client_received_review_copy_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "received_review_copy_from_client_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "architecture_notes",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "noted_fields",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("corrector_date", models.DateField(blank=True, null=True)),
                ("receive_final_copy_date", models.DateField(blank=True, null=True)),
                (
                    "investor_affiliation",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("project_number", models.IntegerField(blank=True, null=True)),
                (
                    "sketch_design_progress_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Ground floor", "Ground"),
                            ("First floor", "First"),
                            ("Second floor", "Second"),
                            ("Third floor", "Third"),
                            ("Annex room", "Annex"),
                            ("Facade", "Facade"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("plan_delivery_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("moved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "architect",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="architect",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "architecture_reviewer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="architecture_reviewer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "client_phone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="api.client",
                    ),
                ),
                (
                    "construction_eng",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contruction_engineer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "construction_reviewer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="construction_reviewer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "corrector",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="corrector",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "design_eng",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="designer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "electrical_eng",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="electrical_engineer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "electrical_reviewer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="electrical_reviewer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "plumbing_eng",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="plumbing_engineer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "plumbing_reviewer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="plumbing_reviewer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(blank=True, max_length=255, null=True)),
                ("written_at", models.DateTimeField(blank=True, null=True)),
                (
                    "attachment",
                    models.FileField(blank=True, null=True, upload_to="attachments/"),
                ),
                (
                    "written_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "written_for",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BaladyProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("global_id", models.IntegerField(blank=True, null=True)),
                (
                    "path",
                    models.CharField(
                        choices=[
                            ("balady", "Balady"),
                            ("service_card", "Service Card"),
                            ("quantity_sorting", "Quantity Sorting"),
                        ],
                        max_length=100,
                    ),
                ),
                ("project_name", models.CharField(max_length=100)),
                (
                    "request_type",
                    models.CharField(
                        choices=[
                            ("issue_license", "Issue License"),
                            (
                                "convert_license_to_electronic",
                                "Convert License To Electronic",
                            ),
                            ("restoration_license", "Restoration License"),
                            (
                                "add_modify_components_license",
                                "Add Modify Components License",
                            ),
                            (
                                "construction_completion_certificate",
                                "Construction Completion Certificate",
                            ),
                            ("license_separation", "License Separation"),
                            ("license_renewal", "License Renewal"),
                            ("demolition_license", "Demolition License"),
                            (
                                "ownership_license_transfer",
                                "Ownership License Transfer",
                            ),
                            ("survey_decision", "Survey Decision"),
                            ("service_card", "Service Card"),
                            ("loading_certificate", "Loading Certificate"),
                            ("components_form", "Components Form"),
                            ("quantity_sorting", "Quantity Sorting"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "request_review",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Working on it", "Working On It"),
                            ("Done", "Done"),
                            ("Hold", "Hold"),
                            ("Not required", "Not Required"),
                            ("ready", "Ready"),
                            ("no", "No"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "transaction_stop_reason",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "technical_report",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Working on it", "Working On It"),
                            ("Done", "Done"),
                            ("Hold", "Hold"),
                            ("Not required", "Not Required"),
                            ("ready", "Ready"),
                            ("no", "No"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("building_inspection_date", models.DateField(blank=True, null=True)),
                ("request_ready_date", models.DateField(blank=True, null=True)),
                ("approval_date", models.DateField(blank=True, null=True)),
                ("is_eng_needed", models.BooleanField(blank=True, null=True)),
                (
                    "sorting_purpose",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("request_submission", models.JSONField(blank=True, null=True)),
                ("municipality_visit", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("moved_at", models.DateTimeField(auto_now_add=True)),
                (
                    "client_phone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="balady_projects",
                        to="api.client",
                    ),
                ),
                (
                    "design_proj",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="balady_project",
                        to="api.project",
                    ),
                ),
            ],
            options={
                "ordering": ["moved_at"],
            },
        ),
        migrations.CreateModel(
            name="Attachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("contract", "Contract"),
                            ("deed", "Deed"),
                            ("report", "Report"),
                            ("identity", "Identity"),
                            ("container_contract", "Containercontract"),
                            ("license", "License"),
                            ("plan", "Plan"),
                            ("old_plan", "Oldplan"),
                            ("load_bearing_certificate", "Loadbearingcertificate"),
                            ("location_certificate", "Locationcertificate"),
                            ("land_survey", "Landsurvey"),
                            ("soil_test", "Soiltest"),
                            ("coordinate_certificate", "Coordinatecertificate"),
                            ("technical_report", "Technicalreport"),
                            ("demolition_letters", "Demolitionletters"),
                            ("autocad", "Autocad"),
                            ("client_form", "Clientform"),
                            ("old_license", "Oldlicense"),
                            ("civil_defense", "Civildefense"),
                            ("water_authority", "Waterauthority"),
                            ("construction_plan", "Constructionplan"),
                            ("electrical_plan", "Electricalplan"),
                            ("energy_efficiency_plan", "Energyefficiencyplan"),
                            ("plumbing_plan", "Plumbingplan"),
                            ("architecture_plan", "Architectureplan"),
                            ("building_pictures", "Buildingpictures"),
                            ("other", "Other"),
                        ],
                        max_length=100,
                    ),
                ),
                ("attachment", models.FileField(upload_to=api.models.PathAndRename())),
                ("uploaded_at", models.DateTimeField(blank=True, null=True)),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "uploaded_for",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SortingDeedsProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("global_id", models.IntegerField(blank=True, null=True)),
                (
                    "stage",
                    models.CharField(
                        choices=[
                            ("land_sorting", "Land Sorting"),
                            ("land_merging", "Land Merging"),
                            ("housing_sorting", "Housing Sorting"),
                            ("land_sorting_completed", "Land Sorting Completed"),
                            ("land_merging_completed", "Land Merging Completed"),
                            ("housing_sorting_completed", "Housing Sorting Completed"),
                        ],
                        max_length=100,
                    ),
                ),
                ("project_name", models.CharField(max_length=100)),
                ("case_study", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "spatial_inspection",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "transaction_upload",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "urban_planning_review",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("issue_bill", models.CharField(blank=True, max_length=100, null=True)),
                ("source", models.CharField(blank=True, max_length=100, null=True)),
                ("accounting", models.CharField(blank=True, max_length=100, null=True)),
                ("notes", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "client_phone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sorting_deeds_projects",
                        to="api.client",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GlobalID",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "balady_id",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.baladyproject",
                    ),
                ),
                (
                    "land_id",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.landsurveyproject",
                    ),
                ),
                (
                    "design_id",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.project",
                    ),
                ),
                (
                    "sorting_id",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.sortingdeedsproject",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TableView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "stage",
                    models.CharField(
                        choices=[
                            ("sketch", "Sketch"),
                            ("sketch_review", "Sketch Review"),
                            ("approval_before_columns", "Approval Before Columns"),
                            ("awaiting_client_approval", "Awaiting Client Approval"),
                            ("execution_stage", "Execution Stage"),
                            ("autocad_review", "Autocad Review"),
                            ("ready_to_print", "Ready To Print"),
                            ("validate_sign_review_copy", "Validate Sign Review Copy"),
                            ("ready_to_collect", "Ready To Collect"),
                            ("client_received_copy", "Client Received Copy"),
                            ("edit_client_notes", "Edit Client Notes"),
                            ("license_issuance", "License Issuance"),
                            ("ready_for_final_receipt", "Ready For Final Receipt"),
                            ("completed_projects", "Completed Projects"),
                            ("inactive_projects", "Inactive Projects"),
                        ],
                        max_length=100,
                    ),
                ),
                ("view", models.JSONField(blank=True, null=True)),
                (
                    "employee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
